# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# set PATH so it includes user's private ~/.local/bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
   PATH="$HOME/.local/bin:$PATH"
fi

alias ls='ls --color=auto'
alias ll='ls -lav --ignore=..'   # show long listing of all except ".."
alias l='ls -lav --ignore=.?*'   # show long listing but no hidden dotfiles except "."
PS1="\[$(tput bold)\]\[\033[38;5;4m\][\u@\h\[$(tput sgr0)\] \[$(tput bold)\]\W\[$(tput bold)\]\[\033[38;5;4m\]]\\$\[$(tput sgr0)\] \[$(tput sgr0)\]"

# Enviroment variables
export PF_INFO="ascii title os host kernel uptime pkgs memory palette"

# Aliases
alias cz='chezmoi'
alias czs='chezmoi status'
alias cza='chezmoi add'
alias czc='chezmoi cd'
alias gits='git status'
alias gita='git add'
alias gitc='git commit'
alias gitp='git push'
alias nv='nvim'
alias nf='neofetch'
alias pf='pfetch'
alias ..='cd ..'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias fa='flavours apply'
alias fl='flavours list'
alias home='cd ~'

_open_files_for_editing() {
    # Open any given document file(s) for editing (or just viewing).
    # Note1:
    #    - Do not use for executable files!
    # Note2:
    #    - Uses 'mime' bindings, so you may need to use
    #      e.g. a file manager to make proper file bindings.

    if [ -x /usr/bin/exo-open ] ; then
        echo "exo-open $@" >&2
        setsid exo-open "$@" >& /dev/null
        return
    fi
    if [ -x /usr/bin/xdg-open ] ; then
        for file in "$@" ; do
            echo "xdg-open $file" >&2
            setsid xdg-open "$file" >& /dev/null
        done
        return
    fi

    echo "$FUNCNAME: package 'xdg-utils' or 'exo' is required." >&2
}
